name: Development pipeline

on:
  push:
    branches:
      - main

  pull_request:
    branches: [main]
    types: [opened, synchronize]

env:
  COMMIT_MESSAGES: ${{ toJson(github.event.commits.*.message) }}

jobs:
  backend_pipeline:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - uses: actions/setup-node@eeb10cff27034e7acf239c5d29f62154018672fd
      
      - name: packages install
        run: npm install
      
      - name: lint
        run: npm run lint
      
      - name: build
        run: npm run tsc
      
      - name: test
        run: npm run test

  frontend_pipeline:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - uses: actions/setup-node@eeb10cff27034e7acf239c5d29f62154018672fd

      - name: packages install
        working-directory: './frontend'
        run: npm install

      - name: lint
        working-directory: './frontend'
        run: npm run lint

      - name: build
        working-directory: './frontend'
        run: npm run build

      - name: test
        working-directory: './frontend'
        run: npm run test
  
  e2e_testing:
    needs: [backend_pipeline, frontend_pipeline]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - uses: actions/setup-node@eeb10cff27034e7acf239c5d29f62154018672fd

      - name: backend packages install
        run: npm install

      - name: frontend packages install
        working-directory: './frontend'
        run: npm install

      - name: e2e tests
        uses: cypress-io/github-action@be2de7b1fe1cdafb4a3c8da0a3746476ef636b65
        with:
          working-directory: frontend
          command: 'npm run test:e2e'
          start: npm run start, npm run server:test
          wait-on: http://localhost:3000, http://localhost:3001

  deployment:
    needs: [e2e_testing]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b

      - name: deploy to heroku
        if: ${{ github.event_name == 'push' && !contains(join(env.COMMIT_MESSAGES, ', '), '#skip') }}
        uses: akhileshns/heroku-deploy@79ef2ae4ff9b897010907016b268fd0f88561820 
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL_ADDRESS}}

  tag_release:
    needs: [deployment]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b

      - name: Bump version and push tag
        if: ${{ github.event_name == 'push' && !contains(join(env.COMMIT_MESSAGES, ', '), '#skip') }}
        uses: anothrNick/github-tag-action@ce4b5ffa38e072fa7a901e417253c438fcc2ccce
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
          WITH_V: true

  discord_notification:
    if: ${{ always() }}
    needs: [tag_release]
    runs-on: ubuntu-20.04
    steps:
      - uses: technote-space/workflow-conclusion-action@d6c558dd4a0c34961129a1a73959688c7cae5a90
      - name: Build succeeded
        if: ${{ env.WORKFLOW_CONCLUSION == 'success' }}
        uses: rjstone/discord-webhook-notify@v1
        with:
          severity: info
          text: "A new version of Pokedex deployed"
          color: "#32CD32"
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
      - name: Build failed
        if: ${{ env.WORKFLOW_CONCLUSION != 'success' }}
        uses: rjstone/discord-webhook-notify@89b0bf43c2c8514f70d0dcba4a706b904e8a3112
        with:
          severity: error
          text: "build failed"
          color: "#C70039"
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
